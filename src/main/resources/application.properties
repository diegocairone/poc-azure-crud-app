spring.datasource.url=jdbc:sqlserver://dcairone.database.windows.net:1433;databaseName=poc-passwordless-db;authentication=ActiveDirectoryDefault
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.datasource.azure.passwordless-enabled=true

# is important to set these 2 properties as blanks
spring.datasource.hikari.username=
spring.datasource.hikari.password=

management.endpoint.beans.enabled=true
management.endpoints.web.exposure.include=beans

tenant-id=c67e11e4-84c1-40e0-bba9-76e85edc72a8
authorization-url=https://login.microsoftonline.com/${tenant-id}/oauth2/v2.0/authorize
token-url=https://login.microsoftonline.com/${tenant-id}/oauth2/v2.0/token

spring.cloud.azure.active-directory.enabled=true
spring.cloud.azure.active-directory.app-id-uri=api://9e497156-6ecf-46d1-b577-9385c44fb3f2

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.client=DEBUG
#logging.level.io.swagger.v3=DEBUG
logging.level.org.springdoc.webmvc=DEBUG

# see: https://www.baeldung.com/spring-boot-https-self-signed-certificate
# to create a self-signed cert, run:
# keytool -genkeypair -alias local-dev -keyalg RSA -keysize 2048 -keystore local-dev.jks -validity 3650
# and store it in resource folder

server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:local-dev.jks
server.ssl.key-store-password=12345678
server.ssl.key-alias=local-dev
server.ssl.enabled=true
server.port=8443


